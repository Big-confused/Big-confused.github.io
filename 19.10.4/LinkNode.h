//单链表基本操作集
/*=======================================================================*/
#ifndef MY_LINKNODE_H
#define MY_LINKNODE_H

#include<stdio.h>
#include<malloc.h>

//链表结点数据域类型自定义
#define LinkNodeData int

//链表结点定义
typedef struct LinkNode
{
	LinkNodeData Data;
	struct LinkNode *Next;
}LNode, *LinkNode;

/*=========================================================================
*操作：创建链表
*结果：返回链表头结点地址
=========================================================================*/
LinkNode Init_LNode(void);

//链表操作函数声明
/*=========================================================================
*操作：在链表末尾插入结点
*形参：H为链表头结点地址，Data为需插入的元素
*结果：成功返回1，失败返回0
========================================================================*/
int Add_LNode(LinkNode H, LinkNodeData Data);

/*========================================================================
*操作：测量链表的长度（不含头结点）
*形参：H为链表头结点地址
*结果：返回链表的长度，失败返回-1
========================================================================*/
int Length_LNode(LinkNode H);

/*========================================================================
*操作：获取链表中任意结点的元素
*形参：H为链表头结点地址，i为查找结点的位置，Data为所获取元素存储的位置
*结果：成功返回1，失败返回0
========================================================================*/
int Get_LNode(LinkNode H, unsigned int i, LinkNodeData* Data);

/*========================================================================
*操作：在任意位置插入一个新结点(允许在最末端插入)
*形参：H为链表头结点地址，i为插入新结点的位置（不含头结点），Data为需插入的元素
*结果：成功返回1，失败返回0
========================================================================*/
int Insert_LNode(LinkNode H, unsigned int i, LinkNodeData Data);

/*========================================================================
*操作：删除任意位置的结点
*形参：H为链表头结点地址，i为删除结点的位置（不含头结点）
*结果：成功返回1，失败返回0
========================================================================*/
int Delete_LNode(LinkNode H, unsigned int i);

/*========================================================================
*操作：清空链表
*形参：H为链表头结点地址
*结果：成功返回1，失败返回0
========================================================================*/
int Clear_LNode(LinkNode H);

/*========================================================================
*操作：销毁链表
*形参：H为链表头结点地址
========================================================================*/
void Destroy_LNode(LinkNode* H);

#endif